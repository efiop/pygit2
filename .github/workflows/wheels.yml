name: Wheels

on:
  push:
    branches:
    - master
    tags:
    - 'v*'

env:
  LIBGIT2_VERSION: 1.3.0

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [x86_64]
    steps:
    - name: Checkout pygit2
      uses: actions/checkout@v2

    - name: Set up QEMU
      if: ${{ matrix.arch == 'aarch64' }}
      uses: docker/setup-qemu-action@v1

    - run: |
        /bin/sh misc/build-all-manylinux-wheels.sh ${{ matrix.arch }}

    - name: Save wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.whl

  macos:
    name: macos-${{ matrix.py.ver }}
    runs-on: macos-11
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.9"
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        cibw_python: ["cp37-*", "cp38-*", "cp39-*", "cp310-*"]
        cibw_arch: ["x86_64", "aarch64", "universal2"]
        exclude:
#          - os: ubuntu-latest
#            cibw_arch: universal2
          - os: macos-latest
            cibw_arch: aarch64
          - os: macos-latest
            cibw_python: "cp37-*"
            cibw_arch: universal2
    steps:
    - name: Checkout pygit2
      uses: actions/checkout@v2

    - uses: actions/setup-python@v2

    - uses: pypa/cibuildwheel@v2.1.1
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BUILD: ${{ matrix.cibw_python }}
        CIBW_ARCHS: ${{ matrix.cibw_arch }}
        # This is needed for now because cffi has no cp310 wheels
        CIBW_BEFORE_ALL_LINUX: "yum -y install libffi-devel libgit2-devel"
        CIBW_TEST_EXTRAS: "test"
        CIBW_TEST_COMMAND: "python {project}/tests/__init__.py"
        CIBW_TEST_COMMAND_WINDOWS: "python {project}\\tests\\__init__.py"
        CIBW_TEST_SKIP: "*universal2:arm64"

    - name: Save wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse/*.whl

  pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [linux, macos]
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist

    - name: Display structure of downloaded files
      run: ls -lh dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
